MessageNotUnderstood: UndefinedObject>>valueOfProperty:ifAbsentPut:19 July 2019 1:36:24.379649 pmVM: Win32 - SmalltalkImage: Squeak5.2 [latest update: #18229]SecurityManager state:Restricted: falseFileAccess: trueSocketAccess: trueWorking Dir D:\ContinumTrusted Dir D:\Continum\GrahamUntrusted Dir C:\Users\Graham\Documents\My SqueakUndefinedObject(Object)>>doesNotUnderstand: #valueOfProperty:ifAbsentPut:	Receiver: nil	Arguments and temporary variables: 		aMessage: 	valueOfProperty: nil ifAbsentPut: [closure] in GTextMorph(GComponent)...etc...		exception: 	MessageNotUnderstood: UndefinedObject>>valueOfProperty:ifAbsentPut:		resumeValue: 	nil	Receiver's instance variables: nilGTextMorph(GComponent)>>modelMorph	Receiver: a GTextMorph(848637)	Arguments and temporary variables: 		o: 	a GScriptingMorph(3065438)	Receiver's instance variables: 		bounds: 	0@0 corner: 50@40		owner: 	a GScriptingMorph(3065438)		submorphs: 	{a PluggableTextMorph(589254)}		fullBounds: 	nil		color: 	Color blue		extension: 	a MorphExtension (3745782) [other:  (model -> a GScriptor)]		get: 	#text		set: 	#accept:		menu: 	nilGTextMorph(GComponent)>>app	Receiver: a GTextMorph(848637)	Arguments and temporary variables: 		m: 	nil	Receiver's instance variables: 		bounds: 	0@0 corner: 50@40		owner: 	a GScriptingMorph(3065438)		submorphs: 	{a PluggableTextMorph(589254)}		fullBounds: 	nil		color: 	Color blue		extension: 	a MorphExtension (3745782) [other:  (model -> a GScriptor)]		get: 	#text		set: 	#accept:		menu: 	nilGTextMorph(Morph)>>appToUse	Receiver: a GTextMorph(848637)	Arguments and temporary variables: 	Receiver's instance variables: 		bounds: 	0@0 corner: 50@40		owner: 	a GScriptingMorph(3065438)		submorphs: 	{a PluggableTextMorph(589254)}		fullBounds: 	nil		color: 	Color blue		extension: 	a MorphExtension (3745782) [other:  (model -> a GScriptor)]		get: 	#text		set: 	#accept:		menu: 	nilGScriptingMorph(GComponent)>>addedMorph:	Receiver: a GScriptingMorph(3065438)	Arguments and temporary variables: 		m: 	a GTextMorph(848637)		a: 	nil	Receiver's instance variables: 		bounds: 	0@0 corner: 50@40		owner: 	nil		submorphs: 	{a GTextMorph(848637)}		fullBounds: 	nil		color: 	Color blue		extension: 	a MorphExtension (2990957) [other:  (layoutProperties -> a TableLayo...etc...		scriptor: 	a GScriptorGScriptingMorph(Morph)>>privateAddMorph:atIndex:	Receiver: a GScriptingMorph(3065438)	Arguments and temporary variables: 		aMorph: 	a GTextMorph(848637)		index: 	1		oldIndex: 	nil		myWorld: 	nil		itsWorld: 	nil		oldOwner: 	nil		i: 	nil	Receiver's instance variables: 		bounds: 	0@0 corner: 50@40		owner: 	nil		submorphs: 	{a GTextMorph(848637)}		fullBounds: 	nil		color: 	Color blue		extension: 	a MorphExtension (2990957) [other:  (layoutProperties -> a TableLayo...etc...		scriptor: 	a GScriptorGScriptingMorph(Morph)>>addMorphFront:	Receiver: a GScriptingMorph(3065438)	Arguments and temporary variables: 		aMorph: 	a GTextMorph(848637)	Receiver's instance variables: 		bounds: 	0@0 corner: 50@40		owner: 	nil		submorphs: 	{a GTextMorph(848637)}		fullBounds: 	nil		color: 	Color blue		extension: 	a MorphExtension (2990957) [other:  (layoutProperties -> a TableLayo...etc...		scriptor: 	a GScriptorGScriptingMorph(Morph)>>addMorph:	Receiver: a GScriptingMorph(3065438)	Arguments and temporary variables: 		aMorph: 	a GTextMorph(848637)	Receiver's instance variables: 		bounds: 	0@0 corner: 50@40		owner: 	nil		submorphs: 	{a GTextMorph(848637)}		fullBounds: 	nil		color: 	Color blue		extension: 	a MorphExtension (2990957) [other:  (layoutProperties -> a TableLayo...etc...		scriptor: 	a GScriptorGScriptingMorph>>initialize	Receiver: a GScriptingMorph(3065438)	Arguments and temporary variables: 	Receiver's instance variables: 		bounds: 	0@0 corner: 50@40		owner: 	nil		submorphs: 	{a GTextMorph(848637)}		fullBounds: 	nil		color: 	Color blue		extension: 	a MorphExtension (2990957) [other:  (layoutProperties -> a TableLayo...etc...		scriptor: 	a GScriptorGScriptingMorph class(Behavior)>>new	Receiver: GScriptingMorph	Arguments and temporary variables: 	Receiver's instance variables: 		superclass: 	GComponent		methodDict: 	a MethodDictionary(#initialize->(GScriptingMorph>>#initialize "a CompiledMethod...etc...		format: 	65543		instanceVariables: 	#('scriptor')		organization: 	('accessing' initialize scriptor scriptor: target target:)		subclasses: 	nil		name: 	#GScriptingMorph		classPool: 	nil		sharedPools: 	nil		environment: 	Smalltalk		category: 	#GoatUIGComponent>>script	Receiver: a GComponent(1401541)	Arguments and temporary variables: 		o: 	a PasteUpMorph(1798826) [world]		m: 	nil	Receiver's instance variables: 		bounds: 	521@458 corner: 571@498		owner: 	a PasteUpMorph(1798826) [world]		submorphs: 	#()		fullBounds: 	521@458 corner: 571@498		color: 	Color blue		extension: 	a MorphExtension (3096237) [other:  (borderStyle -> a BorderStyle)]GComponent>>DoIt	Receiver: a GComponent(1401541)	Arguments and temporary variables: 	Receiver's instance variables: 		bounds: 	521@458 corner: 571@498		owner: 	a PasteUpMorph(1798826) [world]		submorphs: 	#()		fullBounds: 	521@458 corner: 571@498		color: 	Color blue		extension: 	a MorphExtension (3096237) [other:  (borderStyle -> a BorderStyle)]Compiler>>evaluateCue:ifFail:	Receiver: a Compiler	Arguments and temporary variables: 		aCue: 	a CompilationCue		failBlock: 	[closure] in Compiler>>evaluateCue:ifFail:logged:		methodNode: 	DoIt	^ self script		method: 	(GComponent>>#DoIt "a CompiledMethod(3928238)")		value: 	nil	Receiver's instance variables: 		parser: 	a Parser		cue: 	a CompilationCueCompiler>>evaluateCue:ifFail:logged:	Receiver: a Compiler	Arguments and temporary variables: 		aCue: 	a CompilationCue		failBlock: 	[closure] in [] in SmalltalkEditor(TextEditor)>>evaluateSelectionAndDo:...etc...		logFlag: 	true		value: 	nil	Receiver's instance variables: 		parser: 	a Parser		cue: 	a CompilationCueCompiler>>evaluate:in:to:environment:notifying:ifFail:logged:	Receiver: a Compiler	Arguments and temporary variables: 		textOrStream: 	a ReadStream		aContext: 	nil		receiver: 	a GComponent(1401541)		anEnvironment: 	Smalltalk		aRequestor: 	a SmalltalkEditor		failBlock: 	[closure] in [] in SmalltalkEditor(TextEditor)>>evaluateSelectionAndDo:...etc...		logFlag: 	true	Receiver's instance variables: 		parser: 	a Parser		cue: 	a CompilationCue[] in SmalltalkEditor(TextEditor)>>evaluateSelectionAndDo:	Receiver: a SmalltalkEditor	Arguments and temporary variables: <<error during printing>	Receiver's instance variables: 		morph: 	a TextMorphForEditView(377326)		selectionShowing: 	false		model: 	an Inspector		paragraph: 	a NewParagraph		markBlock: 	a CharacterBlock with index 1 and character $s and rectangle 3@0 cor...etc...		pointBlock: 	a CharacterBlock with index 12 and rectangle 61@0 corner: 61@16 in...etc...		beginTypeInIndex: 	nil		emphasisHere: 	{a TextColor code: Color red}		lastParenLocation: 	nil		otherInterval: 	(1 to: 4)		oldInterval: 	nil		typeAhead: 	a WriteStream		history: 	a TextEditorCommandHistory		styler: 	nilBlockClosure>>on:do:	Receiver: [closure] in SmalltalkEditor(TextEditor)>>evaluateSelectionAndDo:	Arguments and temporary variables: 		exceptionOrExceptionSet: 	OutOfScopeNotification		handlerAction: 	[closure] in SmalltalkEditor(TextEditor)>>evaluateSelectionAndDo:...etc...		handlerActive: 	true	Receiver's instance variables: 		outerContext: 	SmalltalkEditor(TextEditor)>>evaluateSelectionAndDo:		startpc: 	253		numArgs: 	0SmalltalkEditor(TextEditor)>>evaluateSelectionAndDo:	Receiver: a SmalltalkEditor	Arguments and temporary variables: 		aBlock: 	[closure] in SmalltalkEditor(TextEditor)>>evaluateSelection		result: 	nil		rcvr: 	a GComponent(1401541)		ctxt: 	nil	Receiver's instance variables: 		morph: 	a TextMorphForEditView(377326)		selectionShowing: 	false		model: 	an Inspector		paragraph: 	a NewParagraph		markBlock: 	a CharacterBlock with index 1 and character $s and rectangle 3@0 cor...etc...		pointBlock: 	a CharacterBlock with index 12 and rectangle 61@0 corner: 61@16 in...etc...		beginTypeInIndex: 	nil		emphasisHere: 	{a TextColor code: Color red}		lastParenLocation: 	nil		otherInterval: 	(1 to: 4)		oldInterval: 	nil		typeAhead: 	a WriteStream		history: 	a TextEditorCommandHistory		styler: 	nilSmalltalkEditor(TextEditor)>>evaluateSelection	Receiver: a SmalltalkEditor	Arguments and temporary variables: 	Receiver's instance variables: 		morph: 	a TextMorphForEditView(377326)		selectionShowing: 	false		model: 	an Inspector		paragraph: 	a NewParagraph		markBlock: 	a CharacterBlock with index 1 and character $s and rectangle 3@0 cor...etc...		pointBlock: 	a CharacterBlock with index 12 and rectangle 61@0 corner: 61@16 in...etc...		beginTypeInIndex: 	nil		emphasisHere: 	{a TextColor code: Color red}		lastParenLocation: 	nil		otherInterval: 	(1 to: 4)		oldInterval: 	nil		typeAhead: 	a WriteStream		history: 	a TextEditorCommandHistory		styler: 	nil--- The full stack ---UndefinedObject(Object)>>doesNotUnderstand: #valueOfProperty:ifAbsentPut:GTextMorph(GComponent)>>modelMorphGTextMorph(GComponent)>>appGTextMorph(Morph)>>appToUseGScriptingMorph(GComponent)>>addedMorph:GScriptingMorph(Morph)>>privateAddMorph:atIndex:GScriptingMorph(Morph)>>addMorphFront:GScriptingMorph(Morph)>>addMorph:GScriptingMorph>>initializeGScriptingMorph class(Behavior)>>newGComponent>>scriptGComponent>>DoItCompiler>>evaluateCue:ifFail:Compiler>>evaluateCue:ifFail:logged:Compiler>>evaluate:in:to:environment:notifying:ifFail:logged:[] in SmalltalkEditor(TextEditor)>>evaluateSelectionAndDo:BlockClosure>>on:do:SmalltalkEditor(TextEditor)>>evaluateSelectionAndDo:SmalltalkEditor(TextEditor)>>evaluateSelection - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -SmalltalkEditor(TextEditor)>>doItSmalltalkEditor(TextEditor)>>doIt:SmalltalkEditor(TextEditor)>>dispatchOnKeyboardEvent:SmalltalkEditor(TextEditor)>>keyStroke:[] in [] in TextMorphForEditView(TextMorph)>>keyStroke:TextMorphForEditView(TextMorph)>>handleInteraction:fromEvent:TextMorphForEditView>>handleInteraction:fromEvent:[] in TextMorphForEditView(TextMorph)>>keyStroke:StandardToolSet class>>codeCompletionAround:textMorph:keyStroke:ToolSet class>>codeCompletionAround:textMorph:keyStroke:TextMorphForEditView(TextMorph)>>keyStroke:TextMorphForEditView>>keyStroke:TextMorphForEditView(Morph)>>handleKeystroke:TextMorphForEditView(TextMorph)>>handleKeystroke:KeyboardEvent>>sentTo:[] in TextMorphForEditView(Morph)>>handleEvent:UndefinedObject>>beCurrentDuring:TextMorphForEditView(Morph)>>handleEvent:TextMorphForEditView(Morph)>>handleFocusEvent:MorphicEventDispatcher>>doHandlingForFocusEvent:with:MorphicEventDispatcher>>dispatchFocusEvent:with:TextMorphForEditView(Morph)>>processFocusEvent:using:TextMorphForEditView(Morph)>>processFocusEvent:[] in [] in [] in HandMorph>>sendFocusEvent:to:clear:BlockClosure>>ensure:KeyboardEvent(MorphicEvent)>>becomeActiveDuring:[] in [] in HandMorph>>sendFocusEvent:to:clear:BlockClosure>>ensure:HandMorph>>becomeActiveDuring:[] in HandMorph>>sendFocusEvent:to:clear:BlockClosure>>ensure:PasteUpMorph>>becomeActiveDuring:HandMorph>>sendFocusEvent:to:clear:HandMorph>>sendEvent:focus:clear:HandMorph>>sendKeyboardEvent:HandMorph>>handleEvent:HandMorph>>processEvents[] in WorldState>>doOneCycleNowFor:Array(SequenceableCollection)>>do:WorldState>>handsDo:WorldState>>doOneCycleNowFor:WorldState>>doOneCycleFor:-- and more not shown --